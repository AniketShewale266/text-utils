{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","navbarTitle","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","length","charAt","slice","join","val","match","extractEmails","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","replace","count_words","defaultProps","aboutText","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oNAIe,SAASA,EAAOC,GAE3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,cAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAcN,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACE,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,oCChCG,SAASC,EAASV,GAsF7B,MAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACI,qCACI,sBAAKZ,UAAU,YAAYa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,WAArE,UACI,6BAAKF,EAAMgB,UACX,qBAAKf,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAegB,MAAOL,EAAME,MAAO,CAACI,gBAA6B,SAAblB,EAAME,KAAc,UAAU,QAAQa,MAAoB,SAAbf,EAAME,KAAc,QAAQ,WAAYiB,SA/FrJ,SAACC,GAErBP,EAAQO,EAAMC,OAAOJ,QA6F+KX,GAAG,QAAQgB,KAAK,QAG5M,wBAAQrB,UAAU,uBAAuBM,QA7F/B,WAElB,IAAIgB,EAAUX,EAAKY,cACnBX,EAAQU,GACRvB,EAAMyB,UAAU,yBAAyB,YAyFjC,kCACA,wBAAQxB,UAAU,uBAAuBM,QAxF/B,WAElB,IAAIgB,EAAUX,EAAKc,cACnBb,EAAQU,GACRvB,EAAMyB,UAAU,yBAAyB,YAoFjC,kCACA,wBAAQxB,UAAU,uBAAuBM,QAnF5B,WAGrBM,EADc,IAEdb,EAAMyB,UAAU,aAAa,YA+ErB,wBACA,wBAAQxB,UAAU,uBAAuBM,QA9EtB,WAG3B,IADA,IAAMoB,EAAMf,EAAKgB,MAAM,KACdC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC5BF,EAAIE,GAAKF,EAAIE,GAAGE,OAAO,GAAGP,cAAgBG,EAAIE,GAAGG,MAAM,GAE3D,IAAMT,EAAUI,EAAIM,KAAK,KACzBpB,EAAQU,GACRvB,EAAMyB,UAAU,8BAA8B,YAsEtC,8BACA,wBAAQxB,UAAU,uBAAuBM,QApE1B,YAGvB,SAAuBK,GAEnB,IAAIsB,EAAMtB,EAAKuB,MAAM,wDAClBD,IACClC,EAAMyB,UAAU,0BAA0B,WAC1CZ,EAAQqB,EAAID,KAAK,QAMzBG,CAAcxB,IAsDN,2BACA,wBAAQX,UAAU,uBAAuBM,QAvCrB,WACxB,IAAMK,EAAOyB,SAASC,eAAe,SACrC1B,EAAK2B,SACL3B,EAAK4B,kBAAkB,EAAE,MACzBC,UAAUC,UAAUC,UAAU/B,EAAKK,OACnCjB,EAAMyB,UAAU,sBAAsB,YAkClC,0BAGJ,sBAAKxB,UAAU,iBAAiBa,MAAO,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,WAA1E,UACI,mDACA,4BAAG,8BAhCX,SAAqBU,GAKlB,OADAA,GADAA,GADAA,EAAOA,EAAKgC,QAAQ,kBAAkB,KAC1BA,QAAQ,YAAY,MACpBA,QAAQ,MAAM,OACdhB,MAAM,KAAKE,OA2BXe,CAAYjC,GAAhB,cAAkCA,EAAKkB,OAAvC,mBACH,4BAAG,8BAAI,KAAQlB,EAAKgB,MAAM,KAAKE,OAA5B,qBACH,4BAAG,2CAEH,4BAAIlB,EAAKkB,OAAO,EAAIlB,EAAO,kEDnE3Cb,EAAO+C,aAAe,CAClB1C,YAAc,iBACd2C,UAAY,kBEjCDC,MAff,SAAehD,GAKX,OACIA,EAAMiD,OACN,8BACE,sBAAKhD,UAAS,sBAAiBD,EAAMiD,MAAM5C,KAA7B,gCAAiE6C,KAAK,QAApF,UACE,iCARW,SAACC,GAChB,IAAMC,EAAQD,EAAKzB,cACnB,OAAO0B,EAAMrB,OAAO,GAAGP,cAAgB4B,EAAMpB,MAAM,GAMtCqB,CAAWrD,EAAMiD,MAAM5C,QADlC,MACqDL,EAAMiD,MAAMK,UCyD5DC,MAtDf,WACE,MAAwB5C,mBAAS,SAAjC,mBAAOT,EAAP,KAAasD,EAAb,KAEA,EAA0B7C,mBAAS,MAAnC,mBAAOsC,EAAP,KAAcQ,EAAd,KAEMhC,EAAY,SAACiC,EAAQrD,GACvBoD,EAAS,CACPH,IAAKI,EACLrD,KAAMA,IAERsD,YAAW,WACTF,EAAS,QACR,MAmBP,OACE,qCAEE,cAAC1D,EAAD,CAAQK,YAAY,YAAY2C,UAAU,kBAAkB7C,KAAMA,EAAMM,WAnBzD,WACP,UAAPN,GACDsD,EAAQ,QACRnB,SAASuB,KAAK9C,MAAMI,gBAAkB,UACtCO,EAAU,6BAA6B,aAIvC+B,EAAQ,SACRnB,SAASuB,KAAK9C,MAAMI,gBAAkB,QACtCO,EAAU,8BAA8B,eAUxC,cAAC,EAAD,CAAOwB,MAAOA,IACd,qBAAKhD,UAAU,iBAAf,SAMO,cAACS,EAAD,CAAUM,QAAU,kCAAkCS,UAAWA,EAAWvB,KAAMA,UC5ChF2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1BuB,K","file":"static/js/main.a4805de1.chunk.js","sourcesContent":["// import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.navbarTitle}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"/\">{props.navbarTitle}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/services\">Services</Link>\r\n              </li> */}\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Mode</label>\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    navbarTitle: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    navbarTitle : \"Set Title here\",\r\n    aboutText : \"Set About here\"\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleonchanged = (event) => {\r\n        // console.log(\"On Changed\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpclick = () => {\r\n        // console.log(\"Uppercase was Click\"  + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n    }\r\n    const handleLcclick = () => {\r\n        // console.log(\"Lowercase was Click\"  + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n    }\r\n    const handleclearclick = () => {\r\n        // console.log(\"Lowercase was Click\"  + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text clear\",\"success\");\r\n    }\r\n    const handlecapitalizedclick = () => {\r\n        // console.log(\"Lowercase was Click\"  + text);\r\n        const arr = text.split(\" \");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        const newText = arr.join(\" \");\r\n        setText(newText)\r\n        props.showAlert(\"Converted to capitalizecase\",\"success\");\r\n        \r\n    }\r\n    const handleextractclick = () => {\r\n\r\n     \r\n        function extractEmails(text)\r\n        {\r\n            let val = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n            if(val){\r\n                props.showAlert(\"Mail has been extracted\",\"success\");\r\n                setText(val.join('\\n'));\r\n            }\r\n            else{\r\n               \r\n            }\r\n        }\r\n        extractEmails(text);\r\n       \r\n        \r\n        // function extractEmails(text)\r\n        // {\r\n        //     let newText = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n        //     setText(newText.join('\\n'));\r\n        // }\r\n        // // let newText = extractEmails(text);\r\n        // // setText(newText.join('\\n'));\r\n        // extractEmails(text);\r\n        // props.showAlert(\"Mail has been extracted\",\"success\");\r\n\r\n\r\n\r\n        }\r\n        const handlecopytextclick = () => {\r\n            const text = document.getElementById('myBox');\r\n            text.select();\r\n            text.setSelectionRange(0,9999);\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\"Copied to Clipboard\",\"success\");\r\n            \r\n        }\r\n\r\n        // const wordcount = (text)=>{\r\n        //     return text.split(\" \").length\r\n        // }\r\n        function count_words(text)\r\n        {\r\n           text = text.replace(/(^\\s*)|(\\s*$)/gi,\"\");\r\n           text = text.replace(/[ ]{2,}/gi,\" \");\r\n           text = text.replace(/\\n /,\"\\n\");\r\n           return text.split(' ').length;\r\n        }\r\n       \r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    // setText(\"Aniket is great\"); // Correct way to change the state\r\n\r\n    // console.log(useState(\"Enter text here2\"));\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'#042743':'white',color: props.mode==='dark'?'white':'#042743'}} onChange={handleonchanged} id=\"myBox\" rows=\"8\">\r\n                    </textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLcclick} >Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleclearclick} >Clear Text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handlecapitalizedclick} >Capitalized case</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleextractclick} >Extract Email</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handlecopytextclick} >Copy Text</button>\r\n            </div>\r\n\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n                <h2>Your text Summary</h2>\r\n                <b><p>{count_words(text)} words and {text.length} characters</p></b>\r\n                <b><p>{0.008 * text.split(\" \").length} Minutes read</p></b>\r\n                <b><h2>Preview</h2></b>\r\n                {/* <b><p>{text}</p></b> */}\r\n                <p>{text.length>0 ? text : \"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&\r\n        <div>\r\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport React,{useState} from 'react'\n// import About from './components/About';\n// import Services from './components/Services';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enable or not\n  // const [switchText, setSwitchText] = useState(\"Enable light Mode\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      // setSwitchText(\"Enable dark Mode\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      // setSwitchText(\"Enable light Mode\")\n    }\n  }\n\n \n  return (\n    <>\n      {/* <Router> */}\n      <Navbar navbarTitle=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/> \n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n             <TextForm heading = \"Enter the text to analyze below\" showAlert={showAlert} mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/services\">\n            <Services />\n          </Route> */}\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}